From 38b7e7f1ea9e1d819c3902e2c0fadf0d35dc4c7d Mon Sep 17 00:00:00 2001
From: Jeremy Puhlman <jpuhlman@mvista.com>
Date: Sun, 27 May 2018 20:11:05 +0000
Subject: [PATCH] Add save baud rate patch

---
 loginutils/getty.c | 32 ++++++++++++++++++--------------
 1 file changed, 18 insertions(+), 14 deletions(-)

diff --git a/loginutils/getty.c b/loginutils/getty.c
index ba6c784..d460155 100644
--- a/loginutils/getty.c
+++ b/loginutils/getty.c
@@ -174,12 +174,12 @@ static void parse_speeds(char *arg)
 }
 
 /* parse command-line arguments */
-static void parse_args(char **argv)
+static void parse_args(char **argv, int argc)
 {
 	char *ts;
 	int flags;
 
-	opt_complementary = "-2"; /* at least 2 args; -t N */
+	opt_complementary = "-1"; /* at least 2 args; -t N */
 	flags = getopt32(argv, opt_string,
 		&G.initstring, &G.fakehost, &G.issue,
 		&G.login, &G.timeout
@@ -191,20 +191,23 @@ static void parse_args(char **argv)
 	}
 	argv += optind;
 	debug("after getopt\n");
-
-	/* We loosen up a bit and accept both "baudrate tty" and "tty baudrate" */
-	G.tty_name = argv[0];
-	ts = argv[1];            /* baud rate(s) */
-	if (isdigit(argv[0][0])) {
-		/* A number first, assume it's a speed (BSD style) */
-		G.tty_name = ts; /* tty name is in argv[1] */
-		ts = argv[0];    /* baud rate(s) */
+       if ( argc <= 2) {
+               G.tty_name = argv[0];
+               ts = 0;
+       } else {
+	      /* We loosen up a bit and accept both "baudrate tty" and "tty baudrate" */
+	      G.tty_name = argv[0];        /* tty name */
+	      ts = argv[1];           /* baud rate(s) */
+	      if (isdigit(argv[0][0])) {
+	              /* A number first, assume it's a speed (BSD style) */
+		      G.tty_name = ts;     /* tty name is in argv[1] */
+	              ts = argv[0];   /* baud rate(s) */
+	      }
+	      if (argv[2])
+	              xsetenv("TERM", argv[2]);
 	}
 	parse_speeds(ts);
 
-	if (argv[2])
-		xsetenv("TERM", argv[2]);
-
 	debug("exiting parse_args\n");
 }
 
@@ -562,7 +565,7 @@ int getty_main(int argc UNUSED_PARAM, char **argv)
 	G.eol = '\r';
 
 	/* Parse command-line arguments */
-	parse_args(argv);
+	parse_args(argv, argc);
 
 	/* Create new session and pgrp, lose controlling tty */
 	pid = setsid();  /* this also gives us our pid :) */
@@ -659,6 +662,7 @@ int getty_main(int argc UNUSED_PARAM, char **argv)
 	/* Make ourself a foreground process group within our session */
 	if (tcsetpgrp(STDIN_FILENO, pid) < 0)
 		bb_perror_msg_and_die("tcsetpgrp");
+	(void) ioctl(0, TIOCSCTTY, 0);
 #endif
 
 	/*
-- 
2.11.1

