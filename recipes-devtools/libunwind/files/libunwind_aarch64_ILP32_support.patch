diff -Naurp git_org/configure.ac git/configure.ac
--- git_org/configure.ac	2015-07-29 09:32:41.791387796 +0530
+++ git/configure.ac	2015-07-29 09:33:04.703427734 +0530
@@ -164,8 +164,8 @@ AM_CONDITIONAL(OS_QNX, expr x$target_os
 AC_MSG_CHECKING([for ELF helper width])
 case "${target_arch}" in
 (arm|hppa|ppc32|x86|sh) use_elf32=yes; AC_MSG_RESULT([32]);;
-(aarch64|ia64|ppc64|x86_64|tilegx)  use_elf64=yes; AC_MSG_RESULT([64]);;
-(mips)                 use_elfxx=yes; AC_MSG_RESULT([xx]);;
+(ia64|ppc64|x86_64|tilegx)  use_elf64=yes; AC_MSG_RESULT([64]);;
+(aarch64|mips)                      use_elfxx=yes; AC_MSG_RESULT([xx]);;
 *)                     AC_MSG_ERROR([Unknown ELF target: ${target_arch}])
 esac
 AM_CONDITIONAL(USE_ELF32, [test x$use_elf32 = xyes])
@@ -229,6 +229,7 @@ AC_ARG_ENABLE(debug_frame,
 AS_HELP_STRING([--enable-debug-frame],[Load the ".debug_frame" section if available]),, [
 case "${target_arch}" in
   (arm) enable_debug_frame=yes;;
+  (aarch64*) enable_debug_frame=yes;;
   (*)   enable_debug_frame=no;;
 esac])
 if test x$enable_debug_frame = xyes; then
diff -Naurp git_org/include/tdep-aarch64/dwarf-config.h git/include/tdep-aarch64/dwarf-config.h
--- git_org/include/tdep-aarch64/dwarf-config.h	2015-07-29 09:32:41.827387861 +0530
+++ git/include/tdep-aarch64/dwarf-config.h	2015-07-29 09:33:44.299496762 +0530
@@ -35,6 +35,7 @@ WITH THE SOFTWARE OR THE USE OR OTHER DE
 #define dwarf_is_big_endian(addr_space) 0
 
 #define dwarf_to_unw_regnum(reg) (((reg) <= UNW_AARCH64_V31) ? (reg) : 0)
+#define dwarf_addr_size(addr_space) ((addr_space)->addr_size)
 
 /* Convert a pointer to a dwarf_cursor structure to a pointer to
    unw_cursor_t.  */
diff -Naurp git_org/include/tdep-aarch64/libunwind_i.h git/include/tdep-aarch64/libunwind_i.h
--- git_org/include/tdep-aarch64/libunwind_i.h	2015-07-29 09:32:41.827387861 +0530
+++ git/include/tdep-aarch64/libunwind_i.h	2015-07-29 09:34:40.079593997 +0530
@@ -33,7 +33,11 @@ WITH THE SOFTWARE OR THE USE OR OTHER DE
 #include <stdlib.h>
 #include <libunwind.h>
 
+#ifdef __LP64__
 #include "elf64.h"
+#else
+#include "elf32.h"
+#endif
 #include "mempool.h"
 #include "dwarf.h"
 
@@ -77,6 +81,7 @@ struct unw_addr_space
   {
     struct unw_accessors acc;
     int big_endian;
+    unsigned int addr_size;
     unw_caching_policy_t caching_policy;
 #ifdef HAVE_ATOMIC_OPS_H
     AO_t cache_generation;
diff -Naurp git_org/src/aarch64/Ginit.c git/src/aarch64/Ginit.c
--- git_org/src/aarch64/Ginit.c	2015-07-29 09:32:41.815387840 +0530
+++ git/src/aarch64/Ginit.c	2015-07-29 09:35:59.643732692 +0530
@@ -165,13 +165,18 @@ get_static_proc_name (unw_addr_space_t a
                       char *buf, size_t buf_len, unw_word_t *offp,
                       void *arg)
 {
+#ifdef __LP64__    
   return _Uelf64_get_proc_name (as, getpid (), ip, buf, buf_len, offp);
+#else
+  return _Uelf32_get_proc_name (as, getpid (), ip, buf, buf_len, offp);
+#endif
 }
 
 HIDDEN void
 aarch64_local_addr_space_init (void)
 {
   memset (&local_addr_space, 0, sizeof (local_addr_space));
+  local_addr_space.addr_size = sizeof (void *);
   local_addr_space.caching_policy = UNW_CACHE_GLOBAL;
   local_addr_space.acc.find_proc_info = dwarf_find_proc_info;
   local_addr_space.acc.put_unwind_info = put_unwind_info;
diff -Naurp git_org/src/aarch64/Gresume.c git/src/aarch64/Gresume.c
--- git_org/src/aarch64/Gresume.c	2015-07-29 09:32:41.815387840 +0530
+++ git/src/aarch64/Gresume.c	2015-07-29 09:37:33.739896719 +0530
@@ -40,7 +40,11 @@ aarch64_local_resume (unw_addr_space_t a
     {
       /* Since there are no signals involved here we restore EH and non scratch
          registers only.  */
+#ifdef __LP64__
       unsigned long regs[15];
+#else
+      unsigned long long regs[11];
+#endif
       regs[0] = uc->uc_mcontext.regs[0];
       regs[1] = uc->uc_mcontext.regs[1];
       regs[2] = uc->uc_mcontext.regs[2];
@@ -56,7 +60,11 @@ aarch64_local_resume (unw_addr_space_t a
       regs[12] = uc->uc_mcontext.regs[27];
       regs[13] = uc->uc_mcontext.regs[28];
       regs[14] = uc->uc_mcontext.regs[30]; /* LR */
+#ifdef __LP64__      
       unsigned long sp = uc->uc_mcontext.sp;
+#else
+      unsigned long long sp = uc->uc_mcontext.sp;
+#endif
 
       struct regs_overlay {
         char x[sizeof(regs)];
diff -Naurp git_org/src/aarch64/offsets.h git/src/aarch64/offsets.h
--- git_org/src/aarch64/offsets.h	2015-07-29 09:32:41.815387840 +0530
+++ git/src/aarch64/offsets.h	2015-07-29 09:38:18.923975484 +0530
@@ -4,11 +4,19 @@
 
 /* Offsets for AArch64 Linux "ucontext_t":  */
 
+#ifdef __LP64__
 #define LINUX_UC_FLAGS_OFF      0x0
 #define LINUX_UC_LINK_OFF       0x8
 #define LINUX_UC_STACK_OFF      0x10
 #define LINUX_UC_SIGMASK_OFF    0x28
 #define LINUX_UC_MCONTEXT_OFF   0xb0
+#else
+#define LINUX_UC_FLAGS_OFF      0x0
+#define LINUX_UC_LINK_OFF       0xC
+#define LINUX_UC_STACK_OFF      0x10
+#define LINUX_UC_SIGMASK_OFF    0x28
+#define LINUX_UC_MCONTEXT_OFF   0xB0
+#endif
 
 /* Offsets for AArch64 Linux "struct sigcontext":  */
 
diff -Naurp git_org/src/Makefile.am git/src/Makefile.am
--- git_org/src/Makefile.am	2015-07-29 09:32:41.819387846 +0530
+++ git/src/Makefile.am	2015-07-29 09:38:47.924026037 +0530
@@ -492,7 +492,7 @@ if ARCH_AARCH64
  libunwind_aarch64_la_SOURCES = $(libunwind_aarch64_la_SOURCES_aarch64)
  libunwind_aarch64_la_LDFLAGS = $(COMMON_SO_LDFLAGS) -version-info $(SOVERSION)
  libunwind_aarch64_la_LIBADD = libunwind-dwarf-generic.la
- libunwind_aarch64_la_LIBADD += libunwind-elf64.la
+ libunwind_aarch64_la_LIBADD += libunwind-elfxx.la
 if !REMOTE_ONLY
  libunwind_aarch64_la_LIBADD += libunwind.la -lc
 endif
