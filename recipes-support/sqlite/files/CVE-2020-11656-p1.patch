From 8e86e242dfb0c02e2aaec6957a00b1b2c13c93b4 Mon Sep 17 00:00:00 2001
From: dan <dan@noemail.net>
Date: Fri, 3 Apr 2020 11:20:40 +0000
Subject: [PATCH] Fix a case when a pointer might be used after being freed in
 the ALTER TABLE code. Fix for [4722bdab08cb1].

FossilOrigin-Name: d09f8c3621d5f7f8c6d99d7d82bcaa8421855b3f470bea2b26c858106382b906

Upstream-Status: Backport https://github.com/sqlite/sqlite/commit/fb99e388ec7f30fe43e4878236e3695ff24ae58d
CVE: CVE-2020-11656 (#1)

Signed-off-by: Rahul Kumar <rahulk@mvista.com>
---
 sqlite3.c | 17 +++++++++++++++++
 1 file changed, 17 insertions(+)

diff --git a/sqlite3.c b/sqlite3.c
index f3f13ae..a657ac9 100644
--- a/sqlite3.c
+++ b/sqlite3.c
@@ -105383,6 +105383,21 @@ static void renameWalkWith(Walker *pWalker, Select *pSelect){
   }
 }
 
+/*
+** Unmap all tokens in the IdList object passed as the second argument.
+*/
+static void unmapColumnIdlistNames(
+  Parse *pParse,
+  IdList *pIdList
+){
+  if( pIdList ){
+    int ii;
+    for(ii=0; ii<pIdList->nId; ii++){
+      sqlite3RenameTokenRemap(pParse, 0, (void*)pIdList->a[ii].zName);
+    }
+  }
+}
+
 /*
 ** Walker callback used by sqlite3RenameExprUnmap().
 */
@@ -105404,6 +105419,7 @@ static int renameUnmapSelectCb(Walker *pWalker, Select *p){
     for(i=0; i<pSrc->nSrc; i++){
       sqlite3RenameTokenRemap(pParse, 0, (void*)pSrc->a[i].zName);
       if( sqlite3WalkExpr(pWalker, pSrc->a[i].pOn) ) return WRC_Abort;
+      unmapColumnIdlistNames(pParse, pSrc->a[i].pUsing);
     }
   }
 
@@ -105612,6 +105628,7 @@ static void renameColumnIdlistNames(
   }
 }
 
+
 /*
 ** Parse the SQL statement zSql using Parse object (*p). The Parse object
 ** is initialized by this function before it is used.
