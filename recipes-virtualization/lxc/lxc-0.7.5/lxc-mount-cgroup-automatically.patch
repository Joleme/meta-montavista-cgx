Index: lxc-0.7.5/src/lxc/cgroup.c
===================================================================
--- lxc-0.7.5.orig/src/lxc/cgroup.c
+++ lxc-0.7.5/src/lxc/cgroup.c
@@ -35,6 +35,7 @@
 #include <sys/inotify.h>
 #include <netinet/in.h>
 #include <net/if.h>
+#include <sys/mount.h>
 
 #include "error.h"
 #include "config.h"
@@ -233,6 +234,32 @@ static int lxc_one_cgroup_create(const c
 }
 
 /*
+ * mount /cgroup if necessary
+ */
+int
+lxc_mount_cgroup(void)
+{
+	int err = 0;
+
+	if (access("/cgroup", F_OK)) {
+		if (mkdir("/cgroup", 0755)) {
+			SYSERROR("Unable to create /cgroup");
+			err = -1;
+			goto out;
+		}
+	}
+	if (access("/cgroup/cpu.stat", F_OK)) {
+		if (mount("cgroup", "/cgroup", "cgroup", 0, NULL)) {
+			err = -1;
+			SYSERROR("Unable to mount /cgroup");
+		}
+	}
+
+out:
+	return err;
+}
+
+/*
  * for each mounted cgroup, create a cgroup for the container
  */
 int lxc_cgroup_create(const char *name, pid_t pid)
Index: lxc-0.7.5/src/lxc/cgroup.h
===================================================================
--- lxc-0.7.5.orig/src/lxc/cgroup.h
+++ lxc-0.7.5/src/lxc/cgroup.h
@@ -26,6 +26,7 @@
 #define MAXPRIOLEN 24
 
 struct lxc_handler;
+int lxc_mount_cgroup(void);
 int lxc_cgroup_create(const char *name, pid_t pid);
 int lxc_cgroup_destroy(const char *name);
 int lxc_cgroup_path_get(char **path, const char *subsystem, const char *name);
Index: lxc-0.7.5/src/lxc/start.c
===================================================================
--- lxc-0.7.5.orig/src/lxc/start.c
+++ lxc-0.7.5/src/lxc/start.c
@@ -475,6 +475,9 @@ int lxc_spawn(struct lxc_handler *handle
 	int failed_before_rename = 0;
 	const char *name = handler->name;
 
+	if (lxc_mount_cgroup())
+		return -1;
+
 	if (lxc_sync_init(handler))
 		return -1;
 
