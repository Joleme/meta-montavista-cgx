The mount detect code set the / at the beginning of the mnt_dir to
\0 for some inexplicable reason.  It didn't set it back in the general
case, so if it looped around again looking for something else that
would fail.  And it had no reason to set it to \0, that would actually
break other things, too, like the virAsprintf right after it.

Index: libvirt-1.0.6/src/util/vircgroup.c
===================================================================
--- libvirt-1.0.6.orig/src/util/vircgroup.c
+++ libvirt-1.0.6/src/util/vircgroup.c
@@ -180,14 +180,12 @@ static int virCgroupDetectMounts(virCgro
                         errno = EINVAL;
                         goto error;
                     }
-                    *tmp2 = '\0';
                     /* If it is a co-mount it has a filename like "cpu,cpuacct"
                      * and we must identify the symlink path */
                     if (strchr(tmp2 + 1, ',')) {
                         if (virAsprintf(&linksrc, "%s/%s",
                                         entry.mnt_dir, typestr) < 0)
                             goto error;
-                        *tmp2 = '/';
 
                         if (lstat(linksrc, &sb) < 0) {
                             if (errno == ENOENT) {
