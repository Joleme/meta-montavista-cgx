SELinux is not required for libvirt, but if it's enabled, libvirt will
fail if it doesn't mount /selinux.  Make the selinux mounts optional.

Index: libvirt-1.0.0/src/lxc/lxc_container.c
===================================================================
--- libvirt-1.0.0.orig/src/lxc/lxc_container.c
+++ libvirt-1.0.0/src/lxc/lxc_container.c
@@ -511,6 +511,7 @@ static int lxcContainerMountBasicFS(bool
         const char *type;
         const char *opts;
         int mflags;
+	int optional
     } mnts[] = {
         /* When we want to make a bind mount readonly, for unknown reasons,
          * it is currently necessary to bind it once, and then remount the
@@ -524,8 +525,8 @@ static int lxcContainerMountBasicFS(bool
         { "sysfs", "/sys", "sysfs", NULL, MS_NOSUID|MS_NOEXEC|MS_NODEV },
         { "sysfs", "/sys", "sysfs", NULL, MS_BIND|MS_REMOUNT|MS_RDONLY },
 #if HAVE_SELINUX
-        { SELINUX_MOUNT, SELINUX_MOUNT, "selinuxfs", NULL, MS_NOSUID|MS_NOEXEC|MS_NODEV },
-        { SELINUX_MOUNT, SELINUX_MOUNT, NULL, NULL, MS_BIND|MS_REMOUNT|MS_RDONLY },
+        { SELINUX_MOUNT, SELINUX_MOUNT, "selinuxfs", NULL, MS_NOSUID|MS_NOEXEC|MS_NODEV, .optional=1 },
+        { SELINUX_MOUNT, SELINUX_MOUNT, NULL, NULL, MS_BIND|MS_REMOUNT|MS_RDONLY, .optional=1 },
 #endif
     };
     int i, rc = -1;
@@ -560,7 +561,8 @@ static int lxcContainerMountBasicFS(bool
                                  _("Failed to mount %s on %s type %s flags=%x opts=%s"),
                                  srcpath, mnts[i].dst, NULLSTR(mnts[i].type),
                                  mnts[i].mflags, NULLSTR(mnts[i].opts));
-            goto cleanup;
+	    if (!mnts[i].optional)
+		goto cleanup;
         }
     }
 
