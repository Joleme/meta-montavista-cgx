The mounting of /cgroups in the container was just about completely
broken.  This fixes it.  Though the mount options are saved for the
mount, I can't make them work.  However, it works find without them.

Index: libvirt-1.0.0/src/lxc/lxc_container.c
===================================================================
--- libvirt-1.0.0.orig/src/lxc/lxc_container.c
+++ libvirt-1.0.0/src/lxc/lxc_container.c
@@ -1291,6 +1291,7 @@ cleanup:
 struct lxcContainerCGroup {
     const char *dir;
     const char *linkDest;
+    const char *opts;
 };
 
 
@@ -1305,6 +1306,7 @@ static void lxcContainerCGroupFree(struc
     for (i = 0 ; i < nmounts ; i++) {
         VIR_FREE(mounts[i].dir);
         VIR_FREE(mounts[i].linkDest);
+        VIR_FREE(mounts[i].opts);
     }
     VIR_FREE(mounts);
 }
@@ -1347,8 +1349,8 @@ static int lxcContainerIdentifyCGroups(s
                 virReportOOMError();
                 goto cleanup;
             }
-            tmp = strrchr(*root, '/');
-            *tmp = '\0';
+//            tmp = strrchr(*root, '/');
+//            *tmp = '\0';
         } else if (!STRPREFIX(mntent.mnt_dir, *root)) {
             virReportError(VIR_ERR_INTERNAL_ERROR,
                            _("Cgroup %s is not mounted under %s"),
@@ -1369,6 +1371,12 @@ static int lxcContainerIdentifyCGroups(s
             virReportOOMError();
             goto cleanup;
         }
+
+        if (!(mounts[nmounts-1].opts = strdup(mntent.mnt_opts))) {
+            virReportOOMError();
+            goto cleanup;
+        }
+
         VIR_DEBUG("Grabbed '%s'", mntent.mnt_dir);
     }
 
@@ -1440,11 +1448,12 @@ cleanup:
 
 static int lxcContainerMountCGroups(struct lxcContainerCGroup *mounts,
                                     size_t nmounts,
-                                    const char *root,
+                                     const char *root,
                                     char *sec_mount_options)
 {
     size_t i;
     char *opts = NULL;
+    int tmpfs_mounted = 0;
 
     VIR_DEBUG("Mounting cgroups at '%s'", root);
 
@@ -1455,23 +1464,29 @@ static int lxcContainerMountCGroups(stru
         return -1;
     }
 
-    if (virAsprintf(&opts,
-                    "mode=755,size=65536%s",(sec_mount_options ? sec_mount_options : "")) < 0 ) {
-        virReportOOMError();
-        return -1;
-    }
-
-    if (mount("tmpfs", root, "tmpfs", MS_NOSUID|MS_NODEV|MS_NOEXEC, opts) < 0) {
-        VIR_FREE(opts);
-        virReportSystemError(errno,
-                             _("Failed to mount %s on %s type %s"),
-                             "tmpfs", root, "tmpfs");
-        return -1;
-    }
-    VIR_FREE(opts);
-
     for (i = 0 ; i < nmounts ; i++) {
         if (mounts[i].linkDest) {
+	    if (!tmpfs_mounted) {
+		tmpfs_mounted = 1;
+	        if (virAsprintf(&opts,
+				"mode=755,size=65536%s",
+				(sec_mount_options ? sec_mount_options : ""))
+		    < 0 ) {
+		    virReportOOMError();
+		    return -1;
+		}
+
+		if (mount("tmpfs", root, "tmpfs", MS_NOSUID|MS_NODEV|MS_NOEXEC,
+			  opts) < 0) {
+		    VIR_FREE(opts);
+		    virReportSystemError(errno,
+					 _("Failed to mount %s on %s type %s"),
+					 "tmpfs", root, "tmpfs");
+		    return -1;
+		}
+		VIR_FREE(opts);
+	    }
+
             VIR_DEBUG("Link mount point '%s' to '%s'",
                       mounts[i].dir, mounts[i].linkDest);
             if (symlink(mounts[i].linkDest, mounts[i].dir) < 0) {
@@ -1490,7 +1505,7 @@ static int lxcContainerMountCGroups(stru
             }
 
             if (mount("cgroup", mounts[i].dir, "cgroup",
-                      0, mounts[i].dir + strlen(root) + 1) < 0) {
+                      0, NULL) < 0) {
                 virReportSystemError(errno,
                                      _("Failed to mount cgroup on '%s'"),
                                      mounts[i].dir);
